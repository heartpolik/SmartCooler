{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "S3BucketName": {
            "Type": "String",
            "Default": "smartcoolermisc",
            "Description": "Name of the S3 Bucket where the static files and the deployment packages are stored."
        }
    },
    "Resources": {
        "ConfigGetApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "ConfigGetApi"
            }
        },
        "ConfigGetDeployment": {
            "DependsOn": [
                "ConfigGetMethod"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "ConfigGetApi"
                },
                "StageName": "DummyStage"
            },
            "Type": "AWS::ApiGateway::Deployment"
        },
        "ConfigGetFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketName"
                    },
                    "S3Key": "getSmartCoolerConfig-1e21d78b-f6e0-46c1-a17f-7628958d0fb7.zip"
                },
                "Description": "Returns config from Dynamo",
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "ConfigGetRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs6.10"
            },
            "DependsOn": [
                "ConfigGetRole"
            ]
        },
        "ConfigGetMethod": {
            "DependsOn": [
                "ConfigGetApi",
                "ConfigGetFunction",
                "ConfigGetPermission",
                "ConfigGetResource"
            ],
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "Integration": {
                    "IntegrationHttpMethod": "GET",
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            ":",
                            [
                                "arn",
                                "aws",
                                "apigateway",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "lambda",
                                {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            "path",
                                            "2015-03-31",
                                            "functions",
                                            {
                                                "Fn::GetAtt": [
                                                    "ConfigGetFunction",
                                                    "Arn"
                                                ]
                                            },
                                            "invocations"
                                        ]
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ],
                "ResourceId": {
                    "Ref": "ConfigGetResource"
                },
                "RestApiId": {
                    "Ref": "ConfigGetApi"
                }
            },
            "Type": "AWS::ApiGateway::Method"
        },
        "ConfigGetPermission": {
            "DependsOn": [
                "ConfigGetFunction"
            ],
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ConfigGetFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com"
            },
            "Type": "AWS::Lambda::Permission"
        },
        "ConfigGetResource": {
            "DependsOn": [
                "ConfigGetApi"
            ],
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "ConfigGetApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "get-config",
                "RestApiId": {
                    "Ref": "ConfigGetApi"
                }
            },
            "Type": "AWS::ApiGateway::Resource"
        },
        "ConfigGetStage": {
            "DependsOn": [
                "ConfigGetApi",
                "ConfigGetDeployment"
            ],
            "Properties": {
                "DeploymentId": {
                    "Ref": "ConfigGetDeployment"
                },
                "MethodSettings": [
                    {
                        "HttpMethod": "*",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "ConfigGetApi"
                },
                "StageName": "LATEST"
            },
            "Type": "AWS::ApiGateway::Stage"
        },
        "ConfigGetRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com",
                                    "dynamodb.amazonaws.com",
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "Stmt1502715943477",
                                    "Action": [
                                        "dynamodb:GetItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "ConfigTable",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        },
                        "PolicyName": "ConfigGetting"
                    }
                ]
            },
            "DependsOn": [
                "ConfigTable"
            ]
        },
        "ConfigSetApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "ConfigSetApi"
            }
        },
        "ConfigSetDeployment": {
            "DependsOn": [
                "ConfigSetMethod"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "ConfigSetApi"
                },
                "StageName": "DummyStage"
            },
            "Type": "AWS::ApiGateway::Deployment"
        },
        "ConfigSetFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketName"
                    },
                    "S3Key": "setSmartCoolerConfig-9148d8c7-10b1-4ca5-a924-a222a3a3379e.zip"
                },
                "Description": "",
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "ConfigSetRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs6.10"
            },
            "DependsOn": [
                "ConfigSetRole"
            ]
        },
        "ConfigSetMethod": {
            "DependsOn": [
                "ConfigSetApi",
                "ConfigSetFunction",
                "ConfigSetPermission",
                "ConfigSetResource"
            ],
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "Integration": {
                    "IntegrationHttpMethod": "GET",
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            ":",
                            [
                                "arn",
                                "aws",
                                "apigateway",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "lambda",
                                {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            "path",
                                            "2015-03-31",
                                            "functions",
                                            {
                                                "Fn::GetAtt": [
                                                    "ConfigSetFunction",
                                                    "Arn"
                                                ]
                                            },
                                            "invocations"
                                        ]
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ],
                "ResourceId": {
                    "Ref": "ConfigSetResource"
                },
                "RestApiId": {
                    "Ref": "ConfigSetApi"
                }
            },
            "Type": "AWS::ApiGateway::Method"
        },
        "ConfigSetPermission": {
            "DependsOn": [
                "ConfigSetFunction"
            ],
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "ConfigSetFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com"
            },
            "Type": "AWS::Lambda::Permission"
        },
        "ConfigSetResource": {
            "DependsOn": [
                "ConfigSetApi"
            ],
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "ConfigSetApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "get-config",
                "RestApiId": {
                    "Ref": "ConfigSetApi"
                }
            },
            "Type": "AWS::ApiGateway::Resource"
        },
        "ConfigSetStage": {
            "DependsOn": [
                "ConfigSetApi",
                "ConfigSetDeployment"
            ],
            "Properties": {
                "DeploymentId": {
                    "Ref": "ConfigSetDeployment"
                },
                "MethodSettings": [
                    {
                        "HttpMethod": "*",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "ConfigSetApi"
                },
                "StageName": "LATEST"
            },
            "Type": "AWS::ApiGateway::Stage"
        },
        "ConfigSetRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com",
                                    "dynamodb.amazonaws.com",
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "Stmt1502715943477",
                                    "Action": [
                                        "dynamodb:GetItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "ConfigTable",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        },
                        "PolicyName": "ConfigSetting"
                    }
                ]
            },
            "DependsOn": [
                "ConfigTable"
            ]
        },
        "ConfigTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "N"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                }
            }
        },
        "CoolerThing": {
            "Type": "AWS::IoT::Thing",
            "Properties": {}
        },
        "CoolerCheckTopicRule": {
            "Type": "AWS::IoT::TopicRule",
            "Properties": {
                "RuleName": "CoolerCheckTopicRule",
                "TopicRulePayload": {
                    "Actions": [
                        {
                            "DynamoDBv2": {
                                "RoleArn": {
                                    "Fn::GetAtt": [
                                        "DbPutRole",
                                        "Arn"
                                    ]
                                },
                                "PutItem": {
                                    "TableName": {
                                        "Ref": "DataTable"
                                    }
                                }
                            }
                        },
                        {
                            "DynamoDBv2": {
                                "RoleArn": {
                                    "Fn::GetAtt": [
                                        "DbPutRole",
                                        "Arn"
                                    ]
                                },
                                "PutItem": {
                                    "TableName": {
                                        "Ref": "DataTable"
                                    }
                                }
                            }
                        }
                    ],
                    "Description": "Insert a message into a DynamoDB table",
                    "RuleDisabled": false,
                    "Sql": "SELECT * FROM 'office/sensors/cooler/data'"
                }
            },
            "DependsOn": [
                "DbPutRole",
                "DataTable"
            ]
        },
        "DataTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "N"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                }
            }
        },
        "DbPutRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "dynamodb.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": {
                                "Effect": "Allow",
                                "Action": "dynamodb:PutItem",
                                "Resource": {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn",
                                            "aws",
                                            "dynamodb",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "table/*"
                                        ]
                                    ]
                                }
                            }
                        },
                        "PolicyName": "DbAccessing"
                    }
                ]
            }
        },
        "LogRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com",
                                    "logs.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSIoTFullAccess"
                ],
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        },
                        "PolicyName": "LambdaExecuting"
                    }
                ]
            }
        },
        "SlackFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketName"
                    },
                    "S3Key": "slack-notification-95b8a82a-3a91-4e9a-be1c-3ba440cd79ee.zip"
                },
                "Description": "Slack Notificaiton",
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LogRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs6.10"
            },
            "DependsOn": [
                "LogRole"
            ]
        },
        "SlackSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
                "Endpoint": {
                    "Fn::GetAtt": [
                        "SlackFunction",
                        "Arn"
                    ]
                },
                "Protocol": "lambda",
                "TopicArn": {
                    "Ref": "SlackTopic"
                }
            },
            "DependsOn": [
                "SlackFunction",
                "SlackTopic"
            ]
        },
        "SlackTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "DisplayName": "SlackTopic",
                "TopicName": "SlackTopic"
            }
        },
        "SmsFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketName"
                    },
                    "S3Key": "sms-notification-2761af90-13ed-4043-b9c9-cd1ba564632c.zip"
                },
                "Description": "SMS Notification",
                "Handler": "twilio_functions.iot_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LogRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7"
            },
            "DependsOn": [
                "LogRole"
            ]
        },
        "SmsSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
                "Endpoint": {
                    "Fn::GetAtt": [
                        "SmsFunction",
                        "Arn"
                    ]
                },
                "Protocol": "lambda",
                "TopicArn": {
                    "Ref": "SmsTopic"
                }
            },
            "DependsOn": [
                "SmsFunction",
                "SmsTopic"
            ]
        },
        "SmsTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "DisplayName": "SmsTopic",
                "TopicName": "SmsTopic"
            }
        },
        "StateApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "ConfigApi"
            }
        },
        "StateDeployment": {
            "DependsOn": [
                "StateMethod"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "StateApi"
                },
                "StageName": "DummyStage"
            },
            "Type": "AWS::ApiGateway::Deployment"
        },
        "StateFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "lambda_function.lambda_handler",
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketName"
                    },
                    "S3Key": "processSmartCoolerState-17e35557-ea65-46ca-9c51-f5383f492065.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "StateRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7"
            },
            "DependsOn": [
                "StateRole"
            ]
        },
        "StateMethod": {
            "DependsOn": [
                "StateApi",
                "StateFunction",
                "StatePermission",
                "StateResource"
            ],
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "Integration": {
                    "IntegrationHttpMethod": "GET",
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            ":",
                            [
                                "arn",
                                "aws",
                                "apigateway",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "lambda",
                                {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            "path",
                                            "2015-03-31",
                                            "functions",
                                            {
                                                "Fn::GetAtt": [
                                                    "StateFunction",
                                                    "Arn"
                                                ]
                                            },
                                            "invocations"
                                        ]
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ],
                "ResourceId": {
                    "Ref": "StateResource"
                },
                "RestApiId": {
                    "Ref": "StateApi"
                }
            },
            "Type": "AWS::ApiGateway::Method"
        },
        "StatePermission": {
            "DependsOn": [
                "StateFunction"
            ],
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "StateFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com"
            },
            "Type": "AWS::Lambda::Permission"
        },
        "StateResource": {
            "DependsOn": [
                "StateApi"
            ],
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "StateApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "get-config",
                "RestApiId": {
                    "Ref": "StateApi"
                }
            },
            "Type": "AWS::ApiGateway::Resource"
        },
        "StateStage": {
            "DependsOn": [
                "StateApi",
                "StateDeployment"
            ],
            "Properties": {
                "DeploymentId": {
                    "Ref": "StateDeployment"
                },
                "MethodSettings": [
                    {
                        "HttpMethod": "*",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "StateApi"
                },
                "StageName": "LATEST"
            },
            "Type": "AWS::ApiGateway::Stage"
        },
        "StateRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        },
                        "PolicyName": "Logging"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "Stmt1502097079000",
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*"
                                    ],
                                    "Resource": [
                                        "arn:aws:dynamodb:*:*:*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "DbPutRole"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "Stmt1502097107000",
                                    "Effect": "Allow",
                                    "Action": [
                                        "sns:*"
                                    ],
                                    "Resource": [
                                        "arn:aws:sns:*:*:*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "SnsAccess"
                    }
                ]
            }
        },
        "StateTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "N"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                }
            }
        },
        "SuperviseFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "SuperviseRole",
                "Handler": "index.handler",
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketName"
                    },
                    "S3Key": "supervisor-d6924748-264a-47cd-8664-422cc7bcc6d5.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "SuperviseRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs6.10"
            },
            "DependsOn": [
                "ConfigTable",
                "SlackFunction",
                "SmsFunction",
                "StateTable"
            ]
        },
        "SuperviseRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "dynamodb.amazonaws.com",
                                    "lambda.amazonaws.com",
                                    "sns.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "Stmt1501701233966",
                                    "Action": [
                                        "sns:Publish"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "SmsFunction",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "SlackFunction",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "Stmt1501701345847",
                                    "Action": [
                                        "dynamodb:GetItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "ConfigTable",
                                            "Arn"
                                        ]
                                    }
                                },
                                {
                                    "Sid": "Stmt1501948889935",
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:GetRecords",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "StateTable",
                                            "Arn"
                                        ]
                                    }
                                },
                                {
                                    "Sid": "Stmt1501701785292",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "SmsFunction",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "SlackFunction",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "SupervisingPolicy"
                    }
                ]
            },
            "DependsOn": [
                "ConfigTable",
                "SlackFunction",
                "SmsFunction",
                "StateTable"
            ]
        },
        "SuperviseRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "ScheduleExpression": "rate(5 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "SuperviseFunction",
                                "Arn"
                            ]
                        },
                        "Id": 1
                    }
                ]
            },
            "DependsOn": [
                "SuperviseFunction"
            ]
        }
    }
}